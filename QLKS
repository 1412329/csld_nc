
use QLKS
alter table KhachHang
drop column maHash
alter table KhachHang
add maHash nvarchar(20)

go
create procedure CheckCreateUsername @User nvarchar(50)
as
if (exists (select tenDangNhap
			from KhachHang
			where tenDangNhap = @User))
	begin
		raiserror (N'Tên đăng nhập đã được sử dụng',16,1)
		return
	end

go
create procedure CheckmaKH @maKH nvarchar(15)
as
if (exists (select KH.maKH
			from KhachHang KH
			where hoTen = @maKH))
	begin
		raiserror (N'Create another ID',16,1)
		rollback transaction
		return
	end

go
create procedure CheckExistUser @User nvarchar(50)
as
	if (exists (select *
				from KhachHang
				where tenDangNhap = @User))
	return 1
	else
	return 0


go
create procedure CheckUserandPass @User nvarchar(50), @Pass varchar(100)
as
	declare @check int;
	exec @check = CheckExistUser @User
	if(@check = 0)
	begin
		raiserror (N'Tên đăng nhập không tồn tại',16,1)
		return
	end
	else
	if (exists (select *
				from KhachHang
				where tenDangNhap = @User and matKhau = @Pass))
		return
	else
	begin
		raiserror (N'Đăng nhập sai, xin vui lòng thử lại',16,1)
		return
	end


		



--go
--create trigger HoaDonDatPhong
--on HOADON
--for insert, update
--as
--if update(maHD)
--begin
--	if exists(select *
--				from inserted i
--				where exists(select DP.maDP
--								from DATPHONG DP
--								where DP.tinhTrang = N'Chưa xác nhận' and DP.maDP = i.maDP))
								
--	begin
--		raiserror(N'Đơn đặt phòng chưa xác nhận không được có hoá đơn', 16, 1)
--		rollback
--	end
--end

----===============================================
--go
--CREATE TRIGGER trgCapNhatThanhTien
--ON HoaDon
--INSTEAD OF   INSERT,update
--AS
--IF UPDATE(tongTien)
--BEGIN 
--	DECLARE @ngayBatDau DATE = (SELECT dp.ngayBatDau 
--								FROM inserted I,dbo.DatPhong dp 
--								WHERE I.maDP=dp.maDP)
--	DECLARE @ngayTraPhong DATE = (SELECT dp.ngayTraPhong 
--								FROM inserted I,dbo.DatPhong dp 
--								WHERE I.maDP=dp.maDp)
--	DECLARE @donGia MONEY = (SELECT dp.donGia 
--							FROM inserted I, dbo.DatPhong dp 
--							WHERE I.maDP=dp.maDp)
--	DECLARE @tongngay INT

--	DECLARE @madp NCHAR(15)  =(SELECT dp.maDP 
--								FROM inserted I, dbo.DatPhong dp 
--								WHERE I.maDP=dp.maDp)
--	SET @tongngay = DATEDIFF(day,@ngayBatDau,@ngayTraPhong) 
--	UPDATE Hoadon SET tongTien=@tongngay*@donGia WHERE maDP=@madp
--END 

----ngày đặt phải lớn hơn ngày bắt đầu và ngày trả
--go
--CREATE TRIGGER trgNgayDat
--ON DatPhong
--FOR INSERT ,UPDATE 
--AS 
--IF UPDATE(ngayDat)
--BEGIN
--	 IF ( EXISTS(SELECT*
--				FROM inserted I 
--				WHERE ngayDat > ngayBatDau OR ngayDat > ngayTraPhong))
--	 BEGIN
--		RAISERROR(N'Lỗi: ngày đặt phải trước ngày bắt đầu và ngày trả phòng !!!',16,1)
--		ROLLBACK 
--	 END
--END

----ngày bắt đầu lớn hơn ngày trả
--go
--CREATE TRIGGER trgNgayBatDau
--ON DatPhong
--FOR INSERT, UPDATE
--as
--IF UPDATE (ngayBatDau) or UPDATE (ngayTraPhong)
--BEGIN
--    IF(EXISTS(SELECT*FROM inserted I WHERE ngayBatDau > ngayTraPhong))
--	BEGIN 
--		RAISERROR (N'Lỗi: ngày bắt đầu phải trước ngày trả',16,1)
--		ROLLBACK
--	END
--END

----ngày lập hóa đơn phải bằng ngày trả

--go
--CREATE TRIGGER trgDonDatPhong
--ON HoaDon
--FOR INSERT 
--AS
--BEGIN 
--	DECLARE @madp NCHAR(15)
--	SELECT @madp=dp.maDP 
--	FROM inserted I,dbo.DatPhong dp 
--	WHERE I.maDP= dp.maDP AND dp.tinhTrang = N'Chưa xác nhận'

--	IF(EXISTS (SELECT*FROM inserted I WHERE I.maDP=@madp))
--	BEGIN 
--		RAISERROR(N'Lỗi: đơn đặt hàng trạng thái chưa xác nhân ko được insert"',16,1)
--		ROLLBACK
--	END 
--END 

----Mỗi mã đặt phòng chỉ cho 1 hóa đơn
--go
--CREATE TRIGGER trgDatPhongMotHoaDon
--ON HoaDon
--FOR INSERT
--as

--IF(SELECT COUNT(hd.maDP)FROM inserted I  INNER  JOIN  dbo.HoaDon hd ON hd.maDP=I.maDP )>1
--BEGIN
--	RAISERROR(N'Lỗi :1 mã đặt phog chỉ một hóa đơn!!',16,1)
--	ROLLBACK
--END 



----Tên đang nhập không được trùng
--go
--CREATE TRIGGER  trgTenDangNhap
--ON  KhachHang
--FOR INSERT,UPDATE 
--AS
--IF(SELECT COUNT(kh.hoTen) FROM inserted I INNER JOIN dbo.KhachHang kh on kh.hoTen=I.hoTen)>1
--BEGIN 
--	RAISERROR('Lôi: tên khách hàng đã bị trùng!!!',16,1)
--	ROLLBACK 
--END 

----số điện thoại không được trùng
--go
--CREATE TRIGGER trgSDT
--ON KhachHang
--FOR INSERT,UPDATE 
--AS
--IF(SELECT COUNT(kh.soDienThoai) FROM dbo.KhachHang kh INNER JOIN inserted I ON kh.soDienThoai=I.soDienThoai )>1
--BEGIN
--	RAISERROR('Lỗi: số điện thoại của khách hàng đã bị trùng',16,1)
--	ROLLBACK
--END 

----Email không được trùng
--go
--CREATE TRIGGER trgEmail
--ON KhachHang
--FOR INSERT, UPDATE 
--AS
--IF(SELECT COUNT (kh.email) FROM dbo.KhachHang kh INNER JOIN inserted I ON kh.email=I.email)>1
--BEGIN
--	RAISERROR('Lỗi: Email của khách hàng không được trùng',16,1)
--	ROLLBACK
--END 

----Số chứng minh không được trùng
--go
--CREATE TRIGGER trgSoCMND
--ON KhachHang
--FOR INSERT, UPDATE 
--AS
--IF(SELECT COUNT (kh.soCMND) FROM dbo.KhachHang kh INNER JOIN inserted I ON kh.soCMND=I.soCMND)>1
--BEGIN
--	RAISERROR('Lỗi: số CMND của khách hàng không được trùng',16,1)
--	ROLLBACK
--END 
--	Create table KhachHang 
--	(
--		maKH nchar(15) not null,
--		hoTen nvarchar(30),
--		tenDangNhap nvarchar(50),
--		matKhau varchar(100),
--		soCMND char(15),
--		diaChi nvarchar(100),
--		soDienThoai char(15),		
--		moTa nvarchar(300),
--		email varchar(50),
--		primary key (maKH)	
--	)

--	Create table KhachSan
--		(
--		MaKS nchar(15) not null,
--		tenKS nvarchar(50),
--		soSao int,
--		soNha nvarchar(10),
--		duong nvarchar(30),
--		quan nvarchar(20),
--		thanhPho nvarchar(20),
--		giaTB money,
--		moTa nvarchar(300),
--		primary key (maKS)
--		)
----tạo bảng LoaiPhong
--	Create table LoaiPhong
--	(
--		maLoaiPhong nvarchar(15) not null,
--		tenLoaiPhong nvarchar(30),
--		maKS nchar(15),
--		donGia money,
--		moTa nvarchar(300),
--		slTrong int,
--		primary key(maLoaiPhong),
--	)
----tạo bảng Phong
--	create table Phong
--	(
--		maPhong nchar(15) not null,
--		LoaiPhong nvarchar(15),
--		soPhong int,
--		primary key (maPhong),
--	) 
----tạo bảng TrangThaiPHong

--	Create table TrangThaiPhong
--	(
--		maPhong nchar(15) not null,
--		ngay date ,
--		tinhTrang nvarchar(15),
--		primary key(maPhong)
--	)
----Tạo bảng đặt phòng
	
--	Create table DatPhong
--	(
--		maDP nchar(15) not null,
--		maLoaiPhong nvarchar(15),
--		maKH nchar(15),
--		ngayBatDau date,
--		ngayTraPhong date,
--		ngayDat date,
--		donGia money,
--		moTa nvarchar(300),
--		tinhTrang nchar(15)
--		primary key (maDP)
--	)
----tạo bảng hóa đơn

--	Create table HoaDon
--	(
--		maHD nchar(15),
--		ngayThanhToan date,
--		tongTien money,
--		maDP nchar(15),
--		primary key(maHD),
--	)

----=====================================================================
--alter table LoaiPhong 
--	add constraint LoaiPhong_KhachSan_FK
--	foreign key (maKS)
--	references KhachSan(maKS)

--alter table Phong
--	add constraint phong_LoaiPhong_FK 
--	foreign key(loaiPhong)
--	references  LoaiPhong(maLoaiPhong)

--alter table TrangThaiPhong
--	add constraint TrangThaiPhong_Phong_FK
--	foreign key (maPhong)
--	references Phong(maPhong)

--alter table DatPhong 
--	add constraint DatPhong_LoaiPhong_FK 
--	foreign key(maLoaiPhong)
--	references LoaiPhong(maLoaiPhong)

--alter table DatPhong 
--	add constraint DatPhong_KhachHang_FK
--	foreign key (maKH)
--	references KhachHang(maKH)

--alter table HoaDon
--	add constraint HoaDon_DatPhong_FK
--	foreign key(maDP)
--	references DatPhong(maDP)
